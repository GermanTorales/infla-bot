name: Development deploy

on:
  push:
    branches:
      - develop

  workflow_dispatch:
    inputs:
      version:
        description: "Image version"
        required: true

env:
  REGISTRY: "${{secrets.DIGITALOCEAN_CONTAINER_REGISTRY}}"
  IMAGE_NAME: "infla-bot-dev"

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout develop
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN}}

      - name: Login to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install docker-ce

      - name: Deplot to DigitalOcean droplet via SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST}}
          username: ${{ secrets.DIGITALOCEAN_USERNAME}}
          key: ${{ secrets.DIGITALOCEAN_SSHKEY}}
          passphrase: ""
          envs: IMAGE_NAME,REGISTRY, {{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{secrets.DIGITALOCEAN_ACCESS_TOKEN}} -p ${{secrets.DIGITALOCEAN_ACCESS_TOKEN}} $(echo $REGISTRY)

            # Stop running container
            docker stop $(echo $IMAGE_NAME)

            # Remove old container
            docker rm $(echo $IMAGE_NAME)

            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo GITHUB_SHA | head -c7)
